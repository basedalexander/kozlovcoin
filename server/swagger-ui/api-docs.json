{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Sample spec",
    "description": "Sample spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags": [
    {
      "name": "transaction",
      "description": "API for transactions"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/transaction": {
      "post": {
        "tags": [
          "transaction"
        ],
        "description": "Emits a new transaction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transaction",
            "description": "emit transaction",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Empty response",
            "schema": {
              "$ref": "#/definitions/emptyResponse"
            }
          }
        }
      }
    },
    "/mine": {
      "get": {
        "tags": [
          "mining"
        ],
        "description": "Triggers node to mine a new block",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "New mined block info",
            "schema": {
              "$ref": "#/definitions/minedBlock"
            }
          }
        }
      }
    },
    "/path/to/method/{someVariable}": {
      "delete": {
        "tags": [
          "Tag1"
        ],
        "description": "Deletes a something",
        "operationId": "delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "someVariable",
            "in": "path",
            "description": "ID to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "delete response",
            "schema": {
              "$ref": "#/definitions/delete"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tag1"
        ],
        "description": "Returns the status of something",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "create": {
      "properties": {
        "eventId": {
          "required": true,
          "type": "string",
          "example": "mathmaticial"
        },
        "numberRequired": {
          "required": true,
          "type": "integer",
          "format": "int64",
          "example": 500
        }
      }
    },
    "transaction": {
      "properties": {
        "from": {
          "required": true,
          "type": "string",
          "example": "315153135dsfaskf"
        },
        "to": {
          "required": true,
          "type": "string",
          "example": "31515dfdfdf3135dsfaskf"
        },
        "amount": {
          "required": true,
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "minedBlock": {
      "properties": {
        "index": {
          "required": true,
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "timeStamp": {
          "required": true,
          "type": "string",
          "format": "date",
          "example": "2018-01-26T13:54:07.243Z"
        },
        "data": {
          "required": true,
          "type": "object",
          "properties": {
            "proof": {
              "required": true,
              "type": "integer",
              "format": "int64",
              "example": 1
            },
            "transactions": {
              "required": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/transaction"
              }
            }
          }
        },
        "hash": {
          "required": true,
          "type": "string",
          "example": "sfdasdf23kj2h940hdf9saf9asdf9sadf"
        }
      }
    },
    "response1": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "23423456543"
        },
        "request": {
          "required": true,
          "type": "schema",
          "example": {
            "eventId": "mathmaticial",
            "numberRequired": 500
          }
        }
      }
    },
    "emptyResponse": {
      "properties": {
      }
    },
    "delete": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "234344234234"
        },
        "status": {
          "required": true,
          "type": "string",
          "example": "deleted"
        }
      }
    },
    "400error": {
      "properties": {
        "message": {
          "type": "string",
          "example": "400 Bad Request"
        }
      }
    }
  }
}